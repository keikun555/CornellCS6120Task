@main {
.main.b0:
  n.0: float = const 99999;
  two.0: float = const 2;
  x.0: float = fdiv n.0 two.0;
  prev_x.0: float = id n.0;
  target.0: float = const 1e-05;
  x.1: float = id x.0;
  v6.0: bool = const false;
  prev_x.1: float = id prev_x.0;
  d.0: float = const 0.0;
.for.cond.1:
  d.1: float = call @diff prev_x.1 x.1;
  v6.1: bool = fgt d.1 target.0;
  br v6.1 .for.body.1 .for.end.1;
.for.body.1:
  prev_x.2: float = id x.1;
  x.2: float = call @sqrt x.1 n.0;
  x.1: float = id x.2;
  v6.0: bool = id v6.1;
  prev_x.1: float = id prev_x.2;
  d.0: float = id d.1;
  jmp .for.cond.1;
.for.end.1:
  print x.1;
}
@sqrt(x.0: float, n.0: float): float {
.sqrt.b0:
  x.1: float = id x.0;
  n.1: float = id n.0;
.sqrt.b1:
  two.0: float = const 2;
  v0.0: float = fmul x.1 x.1;
  v1.0: float = fsub v0.0 n.1;
  v2.0: float = fmul two.0 x.1;
  v3.0: float = fdiv v1.0 v2.0;
  v4.0: float = fsub x.1 v3.0;
  ret v4.0;
}
@diff(a.0: float, b.0: float): float {
.diff.b0:
  a.1: float = id a.0;
  b.1: float = id b.0;
.diff.b1:
  c.0: bool = fgt a.1 b.1;
  br c.0 .then.1 .else.1;
.then.1:
  v5.0: float = fsub a.1 b.1;
  ret v5.0;
.else.1:
  v5.1: float = fsub b.1 a.1;
  ret v5.1;
}
