@main(input.0: int) {
.main.b0:
  input.1: int = id input.0;
.main.b1:
  v1.0: int = const 1;
  index.0: int = id v1.0;
.for.cond.0:
  v9.0: int = phi v9.1 .endif.21;
  v8.0: int = phi v8.1 .endif.21;
  v7.0: int = phi v7.1 .endif.21;
  v6.0: int = phi v6.1 .endif.21;
  v5.0: int = phi v5.1 .endif.21;
  v43.0: int = phi v43.1 .endif.21;
  v42.0: int = phi v42.1 .endif.21;
  v41.0: int = phi v41.1 .endif.21;
  v40.0: int = phi v40.3 .endif.21;
  v4.0: bool = phi v4.1 .endif.21;
  v39.0: int = phi v39.3 .endif.21;
  v38.0: int = phi v38.3 .endif.21;
  v37.0: int = phi v37.3 .endif.21;
  v36.0: int = phi v36.3 .endif.21;
  v35.0: int = phi v35.3 .endif.21;
  v34.0: bool = phi v34.2 .endif.21;
  v32.0: int = phi v32.3 .endif.21;
  v31.0: int = phi v31.3 .endif.21;
  v30.0: int = phi v30.3 .endif.21;
  v29.0: int = phi v29.3 .endif.21;
  v28.0: int = phi v28.3 .endif.21;
  v27.0: int = phi v27.3 .endif.21;
  v26.0: int = phi v26.3 .endif.21;
  v25.0: int = phi v25.3 .endif.21;
  v24.0: bool = phi v24.2 .endif.21;
  v22.0: bool = phi v22.1 .endif.21;
  v20.0: bool = phi v20.1 .endif.21;
  v2.0: int = phi v2.1 .endif.21;
  v19.0: int = phi v19.1 .endif.21;
  v18.0: int = phi v18.1 .endif.21;
  v17.0: int = phi v17.1 .endif.21;
  v16.0: int = phi v16.1 .endif.21;
  v15.0: int = phi v15.1 .endif.21;
  v14.0: int = phi v14.1 .endif.21;
  v13.0: int = phi v13.1 .endif.21;
  v12.0: bool = phi v12.1 .endif.21;
  v11.0: int = phi v11.1 .endif.21;
  v10.0: int = phi v10.1 .endif.21;
  isFizz.0: bool = phi isFizz.1 .endif.21;
  isBuzz.0: bool = phi isBuzz.1 .endif.21;
  index.1: int = phi index.0 index.2 .main.b1 .endif.21;
  div5.0: int = phi div5.1 .endif.21;
  div3.0: int = phi div3.1 .endif.21;
  v2.1: int = id index.1;
  v4.1: bool = lt v2.1 input.1;
  br v4.1 .for.body.0 .for.end.0;
.for.body.0:
  v5.1: int = id index.1;
  v6.1: int = const 3;
  v7.1: int = div v5.1 v6.1;
  div3.1: int = id v7.1;
  v8.1: int = id div3.1;
  v9.1: int = const 3;
  v10.1: int = mul v8.1 v9.1;
  v11.1: int = id index.1;
  v12.1: bool = eq v10.1 v11.1;
  isFizz.1: bool = id v12.1;
  v13.1: int = id index.1;
  v14.1: int = const 5;
  v15.1: int = div v13.1 v14.1;
  div5.1: int = id v15.1;
  v16.1: int = id div5.1;
  v17.1: int = const 5;
  v18.1: int = mul v16.1 v17.1;
  v19.1: int = id index.1;
  v20.1: bool = eq v18.1 v19.1;
  isBuzz.1: bool = id v20.1;
  v22.1: bool = id isFizz.1;
  br v22.1 .then.21 .else.21;
.then.21:
  v24.1: bool = id isBuzz.1;
  br v24.1 .then.23 .else.23;
.then.23:
  v25.1: int = const 0;
  v26.1: int = const 1;
  v27.1: int = sub v25.1 v26.1;
  print v27.1;
  v28.1: int = const 0;
  jmp .endif.23;
.else.23:
  v29.1: int = const 0;
  v30.1: int = const 2;
  v31.1: int = sub v29.1 v30.1;
  print v31.1;
  v32.1: int = const 0;
.endif.23:
  v32.2: int = phi v32.0 v32.1 .then.23 .else.23;
  v31.2: int = phi v31.0 v31.1 .then.23 .else.23;
  v30.2: int = phi v30.0 v30.1 .then.23 .else.23;
  v29.2: int = phi v29.0 v29.1 .then.23 .else.23;
  v28.2: int = phi v28.1 v28.0 .then.23 .else.23;
  v27.2: int = phi v27.1 v27.0 .then.23 .else.23;
  v26.2: int = phi v26.1 v26.0 .then.23 .else.23;
  v25.2: int = phi v25.1 v25.0 .then.23 .else.23;
  jmp .endif.21;
.else.21:
  v34.1: bool = id isBuzz.1;
  br v34.1 .then.33 .else.33;
.then.33:
  v35.1: int = const 0;
  v36.1: int = const 3;
  v37.1: int = sub v35.1 v36.1;
  print v37.1;
  v38.1: int = const 0;
  jmp .endif.33;
.else.33:
  v39.1: int = id index.1;
  print v39.1;
  v40.1: int = const 0;
.endif.33:
  v40.2: int = phi v40.0 v40.1 .then.33 .else.33;
  v39.2: int = phi v39.0 v39.1 .then.33 .else.33;
  v38.2: int = phi v38.1 v38.0 .then.33 .else.33;
  v37.2: int = phi v37.1 v37.0 .then.33 .else.33;
  v36.2: int = phi v36.1 v36.0 .then.33 .else.33;
  v35.2: int = phi v35.1 v35.0 .then.33 .else.33;
.endif.21:
  v40.3: int = phi v40.2 v40.0 .endif.33 .endif.23;
  v39.3: int = phi v39.2 v39.0 .endif.33 .endif.23;
  v38.3: int = phi v38.2 v38.0 .endif.33 .endif.23;
  v37.3: int = phi v37.2 v37.0 .endif.33 .endif.23;
  v36.3: int = phi v36.2 v36.0 .endif.33 .endif.23;
  v35.3: int = phi v35.2 v35.0 .endif.33 .endif.23;
  v34.2: bool = phi v34.1 v34.0 .endif.33 .endif.23;
  v32.3: int = phi v32.0 v32.2 .endif.33 .endif.23;
  v31.3: int = phi v31.0 v31.2 .endif.33 .endif.23;
  v30.3: int = phi v30.0 v30.2 .endif.33 .endif.23;
  v29.3: int = phi v29.0 v29.2 .endif.33 .endif.23;
  v28.3: int = phi v28.0 v28.2 .endif.33 .endif.23;
  v27.3: int = phi v27.0 v27.2 .endif.33 .endif.23;
  v26.3: int = phi v26.0 v26.2 .endif.33 .endif.23;
  v25.3: int = phi v25.0 v25.2 .endif.33 .endif.23;
  v24.2: bool = phi v24.0 v24.1 .endif.33 .endif.23;
  v41.1: int = id index.1;
  v42.1: int = const 1;
  v43.1: int = add v41.1 v42.1;
  index.2: int = id v43.1;
  jmp .for.cond.0;
.for.end.0:
}
