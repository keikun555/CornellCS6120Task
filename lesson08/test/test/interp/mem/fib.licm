@main {
.main.b0:
  ten.0: int = const 10;
  zero.0: int = const 0;
  one.0: int = const 1;
  neg_one.0: int = const -1;
  vals.0: ptr<int> = alloc ten.0;
  store vals.0 zero.0;
  vals_i.0: ptr<int> = ptradd vals.0 one.0;
  store vals_i.0 one.0;
  i.0: int = const 2;
  i_minus_one.0: int = add i.0 neg_one.0;
  i_minus_two.0: int = add i_minus_one.0 neg_one.0;
.loop:
  vals_i_minus_two.0: ptr<int> = phi vals_i_minus_two.1 .body;
  vals_i_minus_one.0: ptr<int> = phi vals_i_minus_one.1 .body;
  vals_i.1: ptr<int> = phi vals_i.0 vals_i.2 .main.b0 .body;
  tmp2.0: int = phi tmp2.1 .body;
  tmp.0: int = phi tmp.2 .body;
  i_minus_two.1: int = phi i_minus_two.0 i_minus_two.2 .main.b0 .body;
  i_minus_one.1: int = phi i_minus_one.0 i_minus_one.2 .main.b0 .body;
  i.1: int = phi i.0 i.2 .main.b0 .body;
  cond.0: bool = phi cond.1 .body;
  cond.1: bool = lt i.1 ten.0;
  br cond.1 .body .done;
.body:
  vals_i.2: ptr<int> = ptradd vals.0 i.1;
  vals_i_minus_one.1: ptr<int> = ptradd vals.0 i_minus_one.1;
  vals_i_minus_two.1: ptr<int> = ptradd vals.0 i_minus_two.1;
  tmp.1: int = load vals_i_minus_one.1;
  tmp2.1: int = load vals_i_minus_two.1;
  tmp.2: int = add tmp.1 tmp2.1;
  store vals_i.2 tmp.2;
  i.2: int = add i.1 one.0;
  i_minus_one.2: int = add i_minus_one.1 one.0;
  i_minus_two.2: int = add i_minus_two.1 one.0;
  jmp .loop;
.done:
  last.0: ptr<int> = ptradd vals.0 i_minus_one.1;
  tmp.3: int = load last.0;
  print tmp.3;
  free vals.0;
  ret;
}
