@pack(size.0: int, n1.0: int, n2.0: int, n3.0: int, n4.0: int, n5.0: int, n6.0: int, n7.0: int, n8.0: int, n9.0: int, n10.0: int): ptr<int> {
.pack.b0:
  size.1: int = id size.0;
  n1.1: int = id n1.0;
  n2.1: int = id n2.0;
  n3.1: int = id n3.0;
  n4.1: int = id n4.0;
  n5.1: int = id n5.0;
  n6.1: int = id n6.0;
  n7.1: int = id n7.0;
  n8.1: int = id n8.0;
  n9.1: int = id n9.0;
  n10.1: int = id n10.0;
.pack.b1:
  one.0: int = const 1;
  i.0: int = const 0;
  array.0: ptr<int> = alloc size.1;
  loc.0: ptr<int> = ptradd array.0 i.0;
  store loc.0 n1.1;
  i.1: int = add i.0 one.0;
  loc.1: ptr<int> = ptradd array.0 i.1;
  store loc.1 n2.1;
  i.2: int = add i.1 one.0;
  loc.2: ptr<int> = ptradd array.0 i.2;
  store loc.2 n3.1;
  i.3: int = add i.2 one.0;
  loc.3: ptr<int> = ptradd array.0 i.3;
  store loc.3 n4.1;
  i.4: int = add i.3 one.0;
  loc.4: ptr<int> = ptradd array.0 i.4;
  store loc.4 n5.1;
  i.5: int = add i.4 one.0;
  loc.5: ptr<int> = ptradd array.0 i.5;
  store loc.5 n6.1;
  i.6: int = add i.5 one.0;
  loc.6: ptr<int> = ptradd array.0 i.6;
  store loc.6 n7.1;
  i.7: int = add i.6 one.0;
  loc.7: ptr<int> = ptradd array.0 i.7;
  store loc.7 n8.1;
  i.8: int = add i.7 one.0;
  loc.8: ptr<int> = ptradd array.0 i.8;
  store loc.8 n9.1;
  i.9: int = add i.8 one.0;
  loc.9: ptr<int> = ptradd array.0 i.9;
  store loc.9 n10.1;
  ret array.0;
}
@max(n.0: int, m.0: int): int {
.max.b0:
  n.1: int = id n.0;
  m.1: int = id m.0;
.max.b1:
  condi.0: bool = lt n.1 m.1;
  br condi.0 .less .biggereq;
.less:
  ret m.1;
.biggereq:
  ret n.1;
}
@main(size.0: int, n1.0: int, n2.0: int, n3.0: int, n4.0: int, n5.0: int, n6.0: int, n7.0: int, n8.0: int, n9.0: int, n10.0: int) {
.main.b0:
  size.1: int = id size.0;
  n1.1: int = id n1.0;
  n2.1: int = id n2.0;
  n3.1: int = id n3.0;
  n4.1: int = id n4.0;
  n5.1: int = id n5.0;
  n6.1: int = id n6.0;
  n7.1: int = id n7.0;
  n8.1: int = id n8.0;
  n9.1: int = id n9.0;
  n10.1: int = id n10.0;
.main.b1:
  array.0: ptr<int> = call @pack size.1 n1.1 n2.1 n3.1 n4.1 n5.1 n6.1 n7.1 n8.1 n9.1 n10.1;
  sum.0: int = const 0;
  max_sum.0: int = const 0;
  one.0: int = const 1;
  zero.0: int = const 0;
  i.0: int = const 0;
.loop:
  sum_incr.0: int = phi sum_incr.1 .bodyi;
  sum.1: int = phi sum.0 sum.2 .main.b1 .bodyi;
  max_sum.1: int = phi max_sum.0 max_sum.2 .main.b1 .bodyi;
  loc.0: ptr<int> = phi loc.1 .bodyi;
  i.1: int = phi i.0 i.2 .main.b1 .bodyi;
  elem.0: int = phi elem.1 .bodyi;
  condi.0: bool = phi condi.1 .bodyi;
  condi.1: bool = lt i.1 size.1;
  br condi.1 .bodyi .done;
.bodyi:
  loc.1: ptr<int> = ptradd array.0 i.1;
  elem.1: int = load loc.1;
  sum_incr.1: int = add sum.1 elem.1;
  sum.2: int = call @max zero.0 sum_incr.1;
  max_sum.2: int = call @max max_sum.1 sum.2;
  i.2: int = add i.1 one.0;
  jmp .loop;
.done:
  print max_sum.1;
  free array.0;
}
